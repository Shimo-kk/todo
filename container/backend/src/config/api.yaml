openapi: 3.0.3

info:
  version: 0.0.1
  title: Todo API

paths:
  /api:
    get:
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
  /api/csrf:
    get:
      operationId: GetCsrfToken
      tags:
        - csrf
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CSRFModel"
  /api/auth/signup:
    post:
      operationId: SignUp
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpModel"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
  /api/auth/signin:
    post:
      operationId: SignIn
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInModel"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
  /api/auth/signout:
    get:
      operationId: SignOut
      tags:
        - auth
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
  /api/v1/user:
    get:
      operationId: GetUser
      tags: 
        - v1/user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserReadModel"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"

  /api/v1/task:
    post:
      operationId: CreateTask
      tags:
        - v1/task
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskCreateModel"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
    put:
      operationId: UpdateTask
      tags:
        - v1/task
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskUpdateModel"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
  /api/v1/task/{id}:
    get:
      operationId: GetTask
      tags:
        - v1/task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskReadModel"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
    delete:
      operationId: DeleteTask
      tags:
        - v1/task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
  /api/v1/task/done/{id}:
    get:
      operationId: DoneTask
      tags:
        - v1/task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskReadModel"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
  /api/v1/tasks:
    get:
      operationId: GetAllTask
      tags:
        - v1/task
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaskReadModel"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
  /api/v1/priorities:
    get:
      operationId: GetAllPriority
      tags:
        - v1/priority
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PriorityReadModel"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
  /api/v1/category:
    post:
      operationId: CreateCategory
      tags:
        - v1/category
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryCreateModel"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
    put:
      operationId: UpdateCategory
      tags:
        - v1/category
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryUpdateModel"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
  /api/v1/category/{id}:
    get:
      operationId: GetCategory
      tags:
        - v1/category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryReadModel"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
    delete:
      operationId: DeleteCategory
      tags:
        - v1/category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
  /api/v1/categories:
    get:
      operationId: GetAllCategory
      tags:
        - v1/category
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CategoryReadModel"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponseModel"   

components:
  schemas:
    DefaultResponseModel:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    CSRFModel:
      type: object
      properties:
        csrf:
          type: string
      required:
        - csrf
    SignUpModel:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - name
        - email
        - password
    SignInModel:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    UserReadModel:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
        email:
          type: string
      required:
        - id
        - created_at
        - updated_at
        - name
        - email
    TaskCreateModel:
      type: object
      properties:
        title:
          type: string
        detail:
          type: string
        start_date:
          type: string
          format: date-time
        priority_id:
          type: integer
        category_id:
          type: integer
      required:
        - title
        - detail
        - start_date
        - priority_id
        - category_id
    TaskReadModel:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        title:
          type: string
        detail:
          type: string
        start_date:
          type: string
          format: date-time
        priority_id:
          type: integer
        category_id:
          type: integer
        done_flag:
          type: boolean
      required:
        - id
        - created_at
        - updated_at
        - title
        - detail
        - start_date
        - priority_id
        - category_id
        - done_flag
    TaskUpdateModel:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        title:
          type: string
        detail:
          type: string
        start_date:
          type: string
          format: date-time
        priority_id:
          type: integer
        category_id:
          type: integer
      required:
        - id
        - created_at
        - updated_at
        - title
        - detail
        - start_date
        - priority_id
        - category_id
    PriorityReadModel:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
      required:
        - id
        - created_at
        - updated_at
        - name
    CategoryCreateModel:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    CategoryUpdateModel:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
      required:
        - id
        - created_at
        - updated_at
        - name
    CategoryReadModel:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
      required:
        - id
        - created_at
        - updated_at
        - name
